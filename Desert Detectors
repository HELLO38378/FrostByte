--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.9) ~  Much Love, Ferib 

]]--

local v0 = string.char;
local v1 = string.byte;
local v2 = string.sub;
local v3 = bit32 or bit;
local v4 = v3.bxor;
local v5 = table.concat;
local v6 = table.insert;
local function v7(v24, v25)
	local v26 = {};
	for v41 = 1, #v24 do
		v6(v26, v0(v4(v1(v2(v24, v41, v41 + 1)), v1(v2(v25, 1 + (v41 % #v25), 1 + (v41 % #v25) + 1))) % 256));
	end
	return v5(v26);
end
local v8 = tonumber;
local v9 = string.byte;
local v10 = string.char;
local v11 = string.sub;
local v12 = string.gsub;
local v13 = string.rep;
local v14 = table.concat;
local v15 = table.insert;
local v16 = math.ldexp;
local v17 = getfenv or function()
	return _ENV;
end;
local v18 = setmetatable;
local v19 = pcall;
local v20 = select;
local v21 = unpack or table.unpack;
local v22 = tonumber;
local function v23(v27, v28, ...)
	local v29 = 1;
	local v30;
	v27 = v12(v11(v27, 5), v7("\196\88", "\101\234\118\182"), function(v42)
		if (v9(v42, 5 - 3) == 81) then
			local v103 = 0;
			while true do
				if (0 ~= v103) then
				else
					v30 = v8(v11(v42, 1, 2 - 1));
					return "";
				end
			end
		else
			local v104 = 0;
			local v105;
			while true do
				if (v104 == 0) then
					v105 = v10(v8(v42, 16));
					if v30 then
						local v120 = v13(v105, v30);
						v30 = nil;
						return v120;
					else
						return v105;
					end
					break;
				end
			end
		end
	end);
	local function v31(v43, v44, v45)
		if v45 then
			local v106 = 0;
			local v107;
			while true do
				if (v106 ~= 0) then
				else
					v107 = (v43 / (2 ^ (v44 - 1))) % (2 ^ (((v45 - (1 - 0)) - (v44 - 1)) + 1));
					return v107 - (v107 % (2 - 1));
				end
			end
		else
			local v108 = 2 ^ (v44 - 1);
			return (((v43 % (v108 + v108)) >= v108) and 1) or 0;
		end
	end
	local function v32()
		local v46 = v9(v27, v29, v29);
		v29 = v29 + 1;
		return v46;
	end
	local function v33()
		local v47 = 0;
		local v48;
		local v49;
		while true do
			if (v47 ~= 1) then
			else
				return (v49 * 256) + v48;
			end
			if (0 ~= v47) then
			else
				v48, v49 = v9(v27, v29, v29 + 2);
				v29 = v29 + 2;
				v47 = 1;
			end
		end
	end
	local function v34()
		local v50 = 0;
		local v51;
		local v52;
		local v53;
		local v54;
		while true do
			if (v50 ~= 1) then
			else
				return (v54 * 16777216) + (v53 * 65536) + (v52 * 256) + v51;
			end
			if (v50 == 0) then
				v51, v52, v53, v54 = v9(v27, v29, v29 + 3);
				v29 = v29 + 4;
				v50 = 1;
			end
		end
	end
	local function v35()
		local v55 = 0;
		local v56;
		local v57;
		local v58;
		local v59;
		local v60;
		local v61;
		while true do
			if (1 ~= v55) then
			else
				v58 = 620 - (555 + 64);
				v59 = (v31(v57, 1, 20) * (2 ^ 32)) + v56;
				v55 = 2;
			end
			if (v55 ~= 3) then
			else
				if (v60 == (568 - (367 + 201))) then
					if (v59 == 0) then
						return v61 * 0;
					else
						v60 = 1;
						v58 = 0;
					end
				elseif (v60 ~= 2047) then
				else
					return ((v59 == 0) and (v61 * (1 / 0))) or (v61 * NaN);
				end
				return v16(v61, v60 - (1950 - (214 + 713))) * (v58 + (v59 / (2 ^ 52)));
			end
			if (v55 ~= 2) then
			else
				v60 = v31(v57, 21, 31);
				v61 = ((v31(v57, 32) == 1) and -1) or (932 - (857 + 74));
				v55 = 3;
			end
			if (v55 ~= 0) then
			else
				v56 = v34();
				v57 = v34();
				v55 = 1;
			end
		end
	end
	local function v36(v62)
		local v63;
		if not v62 then
			v62 = v34();
			if (v62 ~= 0) then
			else
				return "";
			end
		end
		v63 = v11(v27, v29, (v29 + v62) - 1);
		v29 = v29 + v62;
		local v64 = {};
		for v78 = 1, #v63 do
			v64[v78] = v10(v9(v11(v63, v78, v78)));
		end
		return v14(v64);
	end
	local v37 = v34;
	local function v38(...)
		return {...}, v20("#", ...);
	end
	local function v39()
		local v65 = {};
		local v66 = {};
		local v67 = {};
		local v68 = {v65,v66,nil,v67};
		local v69 = v34();
		local v70 = {};
		for v80 = 1 + 0, v69 do
			local v81 = v32();
			local v82;
			if (v81 == 1) then
				v82 = v32() ~= 0;
			elseif (v81 == 2) then
				v82 = v35();
			elseif (v81 ~= 3) then
			else
				v82 = v36();
			end
			v70[v80] = v82;
		end
		v68[1 + 2] = v32();
		for v84 = 1, v34() do
			local v85 = 0;
			local v86;
			while true do
				if (v85 ~= 0) then
				else
					v86 = v32();
					if (v31(v86, 1, 878 - (282 + 595)) == 0) then
						local v116 = 0;
						local v117;
						local v118;
						local v119;
						while true do
							if (v116 ~= 2) then
							else
								if (v31(v118, 1, 1) == 1) then
									v119[2] = v70[v119[2]];
								end
								if (v31(v118, 2, 2) == (1 + 0)) then
									v119[3] = v70[v119[3]];
								end
								v116 = 3;
							end
							if (v116 ~= 0) then
							else
								v117 = v31(v86, 2, 3);
								v118 = v31(v86, 4, 6);
								v116 = 1;
							end
							if (v116 ~= 1) then
							else
								v119 = {v33(),v33(),nil,nil};
								if (v117 == 0) then
									v119[3] = v33();
									v119[4] = v33();
								elseif (v117 == 1) then
									v119[3] = v34();
								elseif (v117 == 2) then
									v119[3] = v34() - (2 ^ 16);
								elseif (v117 ~= 3) then
								else
									local v490 = 0;
									while true do
										if (0 ~= v490) then
										else
											v119[3] = v34() - (2 ^ 16);
											v119[4] = v33();
											break;
										end
									end
								end
								v116 = 2;
							end
							if (v116 ~= 3) then
							else
								if (v31(v118, 3, 3 - 0) ~= 1) then
								else
									v119[4] = v70[v119[1069 - (68 + 997)]];
								end
								v65[v84] = v119;
								break;
							end
						end
					end
					break;
				end
			end
		end
		for v87 = 1271 - (226 + 1044), v34() do
			v66[v87 - (4 - 3)] = v39();
		end
		return v68;
	end
	local function v40(v72, v73, v74)
		local v75 = v72[1];
		local v76 = v72[2];
		local v77 = v72[120 - (32 + 85)];
		return function(...)
			local v89 = v75;
			local v90 = v76;
			local v91 = v77;
			local v92 = v38;
			local v93 = 1;
			local v94 = -1;
			local v95 = {};
			local v96 = {...};
			local v97 = v20("#", ...) - 1;
			local v98 = {};
			local v99 = {};
			for v109 = 0, v97 do
				if (v109 >= v91) then
					v95[v109 - v91] = v96[v109 + 1];
				else
					v99[v109] = v96[v109 + 1];
				end
			end
			local v100 = (v97 - v91) + 1;
			local v101;
			local v102;
			while true do
				v101 = v89[v93];
				v102 = v101[1 + 0];
				if (v102 <= 33) then
					if (v102 <= 16) then
						if (v102 <= 7) then
							if (v102 <= 3) then
								if (v102 <= 1) then
									if (v102 == 0) then
										v99[v101[2]] = #v99[v101[3]];
									else
										local v132 = v101[2];
										v99[v132](v21(v99, v132 + 1, v94));
									end
								elseif (v102 > (1 + 1)) then
									local v133 = v101[959 - (892 + 65)];
									local v134, v135 = v92(v99[v133](v21(v99, v133 + 1, v94)));
									v94 = (v135 + v133) - 1;
									local v136 = 0;
									for v414 = v133, v94 do
										local v415 = 0;
										while true do
											if (v415 == 0) then
												v136 = v136 + (2 - 1);
												v99[v414] = v134[v136];
												break;
											end
										end
									end
								else
									local v137;
									v99[v101[2]] = v73[v101[3]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[3 - 1]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v137 = v101[2];
									v99[v137] = v99[v137](v21(v99, v137 + (1 - 0), v101[3]));
									v93 = v93 + (351 - (87 + 263));
									v101 = v89[v93];
									v99[v101[2]][v101[3]] = v99[v101[4]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = {};
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = {};
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]][v101[3]] = v101[4];
									v93 = v93 + (181 - (67 + 113));
									v101 = v89[v93];
									v99[v101[2]][v101[3]] = v101[4];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]][v101[3]] = v99[v101[3 + 1]];
									v93 = v93 + (2 - 1);
									v101 = v89[v93];
									v99[v101[2]] = v73[v101[3]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v137 = v101[2 + 0];
									v99[v137] = v99[v137](v21(v99, v137 + 1, v101[3]));
									v93 = v93 + (3 - 2);
									v101 = v89[v93];
									v99[v101[2]][v101[3]] = v99[v101[4]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]][v101[3]] = v99[v101[4]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = {};
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]][v101[955 - (802 + 150)]] = v99[v101[4]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[5 - 3]][v101[3]] = v99[v101[4]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v73[v101[3]];
									v93 = v93 + (1 - 0);
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v137 = v101[2];
									v99[v137] = v99[v137](v21(v99, v137 + 1, v101[3]));
									v93 = v93 + 1 + 0;
									v101 = v89[v93];
									v99[v101[2]][v101[1000 - (915 + 82)]] = v99[v101[4]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v99[v101[3]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v74[v101[3]];
								end
							elseif (v102 <= 5) then
								if (v102 > 4) then
									local v155;
									local v156;
									v156 = v101[2];
									v99[v156](v21(v99, v156 + (2 - 1), v101[3]));
									v93 = v93 + 1;
									v101 = v89[v93];
									v156 = v101[2];
									v155 = v99[v101[3]];
									v99[v156 + 1] = v155;
									v99[v156] = v155[v101[4]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v156 = v101[2];
									v99[v156] = v99[v156](v99[v156 + 1]);
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v73[v101[3]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2 + 0]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v156 = v101[2];
									v99[v156] = v99[v156](v21(v99, v156 + 1, v101[3 - 0]));
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]][v101[3]] = v99[v101[4]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v74[v101[1190 - (1069 + 118)]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v99[v101[3]][v101[4]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + (2 - 1);
									v101 = v89[v93];
									v156 = v101[2];
									v99[v156] = v99[v156](v21(v99, v156 + 1, v101[3]));
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]][v101[3]] = v99[v101[4]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]][v101[6 - 3]] = v99[v101[4]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v99[v101[3]][v101[4]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v156 = v101[2];
									v155 = v99[v101[3]];
									v99[v156 + 1] = v155;
									v99[v156] = v155[v101[4]];
								elseif (v101[1 + 1] == v99[v101[4]]) then
									v93 = v93 + 1;
								else
									v93 = v101[3];
								end
							elseif (v102 > 6) then
								local v172 = 0;
								local v173;
								while true do
									if (v172 ~= 0) then
									else
										v173 = v101[3 - 1];
										v99[v173](v21(v99, v173 + 1, v101[3]));
										break;
									end
								end
							else
								local v174;
								local v175;
								local v176, v177;
								local v178;
								v99[v101[2 + 0]] = v73[v101[3]];
								v93 = v93 + 1;
								v101 = v89[v93];
								v99[v101[2]] = v73[v101[794 - (368 + 423)]];
								v93 = v93 + 1;
								v101 = v89[v93];
								v99[v101[2]] = v73[v101[3]];
								v93 = v93 + 1;
								v101 = v89[v93];
								v99[v101[2]] = {};
								v93 = v93 + 1;
								v101 = v89[v93];
								v99[v101[2]] = v73[v101[3]];
								v93 = v93 + 1;
								v101 = v89[v93];
								v99[v101[2]] = v99[v101[3]];
								v93 = v93 + 1;
								v101 = v89[v93];
								for v416 = v101[2], v101[3] do
									v99[v416] = nil;
								end
								v93 = v93 + 1;
								v101 = v89[v93];
								v178 = v101[2];
								v176, v177 = v92(v99[v178](v21(v99, v178 + 1, v101[3])));
								v94 = (v177 + v178) - 1;
								v175 = 0 - 0;
								for v418 = v178, v94 do
									local v419 = 0;
									while true do
										if (v419 ~= 0) then
										else
											v175 = v175 + 1;
											v99[v418] = v176[v175];
											break;
										end
									end
								end
								v93 = v93 + 1;
								v101 = v89[v93];
								v178 = v101[2];
								v174 = v99[v178];
								for v420 = v178 + (19 - (10 + 8)), v94 do
									v15(v174, v99[v420]);
								end
							end
						elseif (v102 <= 11) then
							if (v102 <= 9) then
								if (v102 > 8) then
									local v187 = 0;
									local v188;
									local v189;
									while true do
										if (v187 ~= 1) then
										else
											for v1141 = 1, #v98 do
												local v1142 = 0;
												local v1143;
												while true do
													if (v1142 ~= 0) then
													else
														v1143 = v98[v1141];
														for v1295 = 0, #v1143 do
															local v1296 = v1143[v1295];
															local v1297 = v1296[1];
															local v1298 = v1296[7 - 5];
															if ((v1297 == v99) and (v1298 >= v188)) then
																local v1301 = 0;
																while true do
																	if (v1301 ~= 0) then
																	else
																		v189[v1298] = v1297[v1298];
																		v1296[1] = v189;
																		break;
																	end
																end
															end
														end
														break;
													end
												end
											end
											break;
										end
										if (v187 == 0) then
											v188 = v101[2];
											v189 = {};
											v187 = 1;
										end
									end
								else
									v99[v101[2]] = {};
								end
							elseif (v102 > 10) then
								local v191 = v101[2];
								local v192 = v99[v191];
								local v193 = v99[v191 + 2];
								if (v193 > 0) then
									if (v192 > v99[v191 + 1]) then
										v93 = v101[3];
									else
										v99[v191 + 3] = v192;
									end
								elseif (v192 < v99[v191 + 1]) then
									v93 = v101[3];
								else
									v99[v191 + 3] = v192;
								end
							else
								v99[v101[2]] = v101[3];
							end
						elseif (v102 <= 13) then
							if (v102 > 12) then
								local v196;
								local v197;
								local v198;
								v99[v101[2]] = {};
								v93 = v93 + 1;
								v101 = v89[v93];
								v99[v101[444 - (416 + 26)]] = v101[3];
								v93 = v93 + 1;
								v101 = v89[v93];
								v99[v101[2]] = #v99[v101[3]];
								v93 = v93 + 1;
								v101 = v89[v93];
								v99[v101[2]] = v101[3];
								v93 = v93 + 1;
								v101 = v89[v93];
								v198 = v101[2];
								v197 = v99[v198];
								v196 = v99[v198 + 2];
								if (v196 > 0) then
									if (v197 > v99[v198 + 1]) then
										v93 = v101[9 - 6];
									else
										v99[v198 + 3] = v197;
									end
								elseif (v197 < v99[v198 + 1]) then
									v93 = v101[3];
								else
									v99[v198 + 3] = v197;
								end
							elseif (v99[v101[2]] == v99[v101[4]]) then
								v93 = v93 + 1;
							else
								v93 = v101[3];
							end
						elseif (v102 <= 14) then
							local v206 = 0;
							local v207;
							local v208;
							while true do
								if (v206 ~= 0) then
								else
									v207 = v101[2];
									v208 = v99[v101[3]];
									v206 = 1;
								end
								if (v206 ~= 1) then
								else
									v99[v207 + 1] = v208;
									v99[v207] = v208[v101[4]];
									break;
								end
							end
						elseif (v102 == 15) then
							local v463 = 0;
							local v464;
							local v465;
							local v466;
							local v467;
							while true do
								if (v463 ~= 0) then
								else
									v464 = nil;
									v465, v466 = nil;
									v467 = nil;
									v99[v101[1 + 1]] = v73[v101[3]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v463 = 1;
								end
								if (v463 ~= 5) then
								else
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v467 = v101[2];
									v463 = 6;
								end
								if (v463 == 3) then
									v101 = v89[v93];
									v467 = v101[440 - (145 + 293)];
									v99[v467](v21(v99, v467 + 1, v94));
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v73[v101[3]];
									v463 = 4;
								end
								if (v463 ~= 4) then
								else
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[432 - (44 + 386)]] = v73[v101[1489 - (998 + 488)]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v463 = 5;
								end
								if (v463 == 1) then
									v99[v101[2]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + (1 - 0);
									v101 = v89[v93];
									v463 = 2;
								end
								if (v463 == 7) then
									v99[v101[2]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v93 = v101[775 - (201 + 571)];
									break;
								end
								if (6 ~= v463) then
								else
									v99[v467] = v99[v467](v21(v99, v467 + 1, v101[3]));
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]][v101[1 + 2]] = v99[v101[4]];
									v93 = v93 + 1 + 0;
									v101 = v89[v93];
									v463 = 7;
								end
								if (v463 ~= 2) then
								else
									v467 = v101[2];
									v465, v466 = v92(v99[v467](v21(v99, v467 + 1, v101[3])));
									v94 = (v466 + v467) - 1;
									v464 = 0;
									for v1279 = v467, v94 do
										local v1280 = 0;
										while true do
											if (0 ~= v1280) then
											else
												v464 = v464 + 1;
												v99[v1279] = v465[v464];
												break;
											end
										end
									end
									v93 = v93 + 1;
									v463 = 3;
								end
							end
						else
							local v468 = 0;
							local v469;
							while true do
								if (v468 ~= 4) then
								else
									v99[v101[2]] = v101[1141 - (116 + 1022)];
									v93 = v93 + 1;
									v101 = v89[v93];
									v469 = v101[8 - 6];
									v99[v469] = v99[v469](v21(v99, v469 + 1, v101[3]));
									v468 = 5;
								end
								if (v468 == 3) then
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v468 = 4;
								end
								if (v468 == 2) then
									v101 = v89[v93];
									v99[v101[2]] = v73[v101[3]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v73[v101[3]];
									v468 = 3;
								end
								if (6 ~= v468) then
								else
									v93 = v101[3];
									break;
								end
								if (v468 ~= 0) then
								else
									v469 = nil;
									v99[v101[2]] = v99[v101[3]][v101[4]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v468 = 1;
								end
								if (1 == v468) then
									v93 = v93 + 1;
									v101 = v89[v93];
									v469 = v101[2];
									v99[v469](v99[v469 + 1]);
									v93 = v93 + 1;
									v468 = 2;
								end
								if (v468 ~= 5) then
								else
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]][v101[3]] = v99[v101[4]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v468 = 6;
								end
							end
						end
					elseif (v102 <= 24) then
						if (v102 <= 20) then
							if (v102 <= 18) then
								if (v102 == 17) then
									if v99[v101[2]] then
										v93 = v93 + 1;
									else
										v93 = v101[3];
									end
								else
									local v209 = 0;
									local v210;
									while true do
										if (v209 == 4) then
											v101 = v89[v93];
											v99[v101[2]] = v101[3];
											v93 = v93 + 1;
											v101 = v89[v93];
											v210 = v101[2];
											v99[v210] = v99[v210](v21(v99, v210 + 1, v101[7 - 4]));
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]][v101[3]] = v99[v101[4]];
											v209 = 5;
										end
										if (v209 ~= 16) then
										else
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v101[3];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v101[3];
											v93 = v93 + 1;
											v101 = v89[v93];
											v210 = v101[2];
											v209 = 17;
										end
										if (v209 ~= 24) then
										else
											v99[v101[2]][v101[8 - 5]] = v99[v101[4]];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]][v101[3]] = v101[4];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v74[v101[3]];
											v93 = v93 + (1818 - (1703 + 114));
											v101 = v89[v93];
											v209 = 25;
										end
										if (v209 ~= 21) then
										else
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]][v101[3]] = v101[4];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]][v101[3]] = v101[4];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v74[v101[3]];
											v209 = 22;
										end
										if (v209 ~= 9) then
										else
											v99[v101[2]][v101[3]] = v99[v101[4]];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]][v101[3]] = v101[4];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v74[v101[3]];
											v93 = v93 + (1 - 0);
											v101 = v89[v93];
											v209 = 10;
										end
										if (v209 ~= 12) then
										else
											v101 = v89[v93];
											v99[v101[6 - 4]][v101[3]] = v99[v101[4]];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v74[v101[1750 - (760 + 987)]];
											v93 = v93 + (1914 - (1789 + 124));
											v101 = v89[v93];
											v99[v101[2]] = v99[v101[3]][v101[4]];
											v93 = v93 + 1;
											v209 = 13;
										end
										if (v209 ~= 23) then
										else
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v101[3];
											v93 = v93 + 1;
											v101 = v89[v93];
											v210 = v101[2];
											v99[v210] = v99[v210](v21(v99, v210 + 1, v101[3]));
											v93 = v93 + (1414 - (447 + 966));
											v101 = v89[v93];
											v209 = 24;
										end
										if (7 ~= v209) then
										else
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v99[v101[3]][v101[4]];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v101[3];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v101[888 - (261 + 624)];
											v209 = 8;
										end
										if (v209 ~= 25) then
										else
											v99[v101[2]] = v99[v101[3]][v101[4]];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v101[3];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v101[3];
											v93 = v93 + 1;
											v101 = v89[v93];
											v209 = 26;
										end
										if (v209 ~= 10) then
										else
											v99[v101[2]] = v99[v101[1083 - (1020 + 60)]][v101[4]];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v101[1426 - (630 + 793)];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v101[9 - 6];
											v93 = v93 + 1;
											v101 = v89[v93];
											v209 = 11;
										end
										if (v209 == 15) then
											v93 = v93 + 1 + 0;
											v101 = v89[v93];
											v99[v101[2]] = v74[v101[3]];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v99[v101[3]][v101[10 - 6]];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v73[v101[11 - 8]];
											v209 = 16;
										end
										if (v209 ~= 13) then
										else
											v101 = v89[v93];
											v99[v101[2]] = v101[3];
											v93 = v93 + (767 - (745 + 21));
											v101 = v89[v93];
											v99[v101[2]] = v101[3];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v101[3];
											v93 = v93 + 1;
											v209 = 14;
										end
										if (v209 ~= 3) then
										else
											v210 = v101[2];
											v99[v210] = v99[v210](v21(v99, v210 + 1, v101[3]));
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v73[v101[862 - (814 + 45)]];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v101[3];
											v93 = v93 + 1;
											v209 = 4;
										end
										if (v209 ~= 5) then
										else
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v74[v101[3]];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v99[v101[1 + 2]][v101[4]];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v99[v101[3]][v101[4]];
											v209 = 6;
										end
										if (v209 ~= 11) then
										else
											v99[v101[9 - 7]] = v101[3];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v101[3];
											v93 = v93 + 1;
											v101 = v89[v93];
											v210 = v101[1 + 1];
											v99[v210] = v99[v210](v21(v99, v210 + 1, v101[3]));
											v93 = v93 + 1;
											v209 = 12;
										end
										if (v209 == 1) then
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v73[v101[3]];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v101[3];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v101[3];
											v209 = 2;
										end
										if (v209 ~= 17) then
										else
											v99[v210] = v99[v210](v21(v99, v210 + 1, v101[3]));
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[1 + 1]] = v99[v101[3]];
											v93 = v93 + 1;
											v101 = v89[v93];
											v210 = v101[2 + 0];
											v99[v210] = v99[v210](v21(v99, v210 + 1, v101[3]));
											v93 = v93 + 1;
											v209 = 18;
										end
										if (v209 == 26) then
											v99[v101[2]] = v101[3];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v101[704 - (376 + 325)];
											v93 = v93 + 1;
											v101 = v89[v93];
											v210 = v101[2];
											v99[v210] = v99[v210](v21(v99, v210 + 1, v101[3]));
											v93 = v93 + (1 - 0);
											v209 = 27;
										end
										if (v209 ~= 20) then
										else
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v99[v101[3]][v101[4 + 0]];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v99[v101[3]][v101[4]];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]][v101[3]] = v99[v101[8 - 4]];
											v209 = 21;
										end
										if (v209 ~= 27) then
										else
											v101 = v89[v93];
											v99[v101[2]][v101[3]] = v99[v101[4]];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v74[v101[3]];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v99[v101[3]][v101[4]];
											break;
										end
										if (6 == v209) then
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]][v101[3]] = v99[v101[2 + 2]];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]][v101[3]] = v101[4];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v74[v101[3]];
											v209 = 7;
										end
										if (18 ~= v209) then
										else
											v101 = v89[v93];
											v99[v101[2]] = v73[v101[3]];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v101[1058 - (87 + 968)];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v101[3];
											v93 = v93 + 1;
											v209 = 19;
										end
										if (v209 == 0) then
											v210 = nil;
											v210 = v101[2];
											v99[v210](v21(v99, v210 + 1, v101[2 + 1]));
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v74[v101[3]];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v99[v101[3]][v101[14 - 10]];
											v209 = 1;
										end
										if (v209 ~= 8) then
										else
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v101[3];
											v93 = v93 + 1;
											v101 = v89[v93];
											v210 = v101[2];
											v99[v210] = v99[v210](v21(v99, v210 + 1, v101[3]));
											v93 = v93 + 1;
											v101 = v89[v93];
											v209 = 9;
										end
										if (v209 ~= 2) then
										else
											v93 = v93 + 1;
											v101 = v89[v93];
											v210 = v101[2];
											v99[v210] = v99[v210](v21(v99, v210 + 1, v101[3]));
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v99[v101[10 - 7]];
											v93 = v93 + 1;
											v101 = v89[v93];
											v209 = 3;
										end
										if (19 ~= v209) then
										else
											v101 = v89[v93];
											v210 = v101[2];
											v99[v210] = v99[v210](v21(v99, v210 + 1, v101[3]));
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]][v101[13 - 10]] = v99[v101[4]];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v74[v101[3]];
											v209 = 20;
										end
										if (v209 ~= 22) then
										else
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v99[v101[3]][v101[4]];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v101[3];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v101[3];
											v209 = 23;
										end
										if (v209 ~= 14) then
										else
											v101 = v89[v93];
											v99[v101[2]] = v101[3];
											v93 = v93 + 1;
											v101 = v89[v93];
											v210 = v101[2];
											v99[v210] = v99[v210](v21(v99, v210 + 1, v101[3]));
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]][v101[3]] = v99[v101[4]];
											v209 = 15;
										end
									end
								end
							elseif (v102 == 19) then
								local v211 = 0;
								while true do
									if (1 ~= v211) then
									else
										v93 = v93 + 1;
										v101 = v89[v93];
										v99[v101[2]] = v99[v101[3]][v101[4]];
										v93 = v93 + 1;
										v211 = 2;
									end
									if (v211 == 0) then
										v99[v101[5 - 3]] = v73[v101[3]];
										v93 = v93 + 1;
										v101 = v89[v93];
										v99[v101[2]] = v73[v101[3]];
										v211 = 1;
									end
									if (v211 ~= 3) then
									else
										v99[v101[2]][v101[3]] = v99[v101[4]];
										v93 = v93 + 1;
										v101 = v89[v93];
										do
											return;
										end
										break;
									end
									if (v211 ~= 2) then
									else
										v101 = v89[v93];
										v99[v101[1 + 1]] = not v99[v101[3]];
										v93 = v93 + 1;
										v101 = v89[v93];
										v211 = 3;
									end
								end
							else
								v99[v101[4 - 2]] = v99[v101[3]][v101[4]];
							end
						elseif (v102 <= 22) then
							if (v102 > 21) then
								local v214 = 0;
								local v215;
								while true do
									if (v214 ~= 3) then
									else
										v101 = v89[v93];
										v99[v101[2]] = v73[v101[3]];
										v93 = v93 + 1;
										v101 = v89[v93];
										v99[v101[2]] = v99[v101[3]][v101[4]];
										v93 = v93 + 1;
										v101 = v89[v93];
										v99[v101[2]] = v99[v101[3]][v101[4]];
										v214 = 4;
									end
									if (v214 ~= 1) then
									else
										v93 = v93 + 1;
										v101 = v89[v93];
										v99[v101[2]] = v74[v101[3]];
										v93 = v93 + (15 - (9 + 5));
										v101 = v89[v93];
										v99[v101[2]] = v99[v101[3]][v101[4]];
										v93 = v93 + 1;
										v101 = v89[v93];
										v214 = 2;
									end
									if (v214 ~= 5) then
									else
										v99[v101[2]] = v73[v101[3]];
										v93 = v93 + 1;
										v101 = v89[v93];
										v99[v101[2 + 0]] = v99[v101[3]][v101[4]];
										v93 = v93 + 1;
										v101 = v89[v93];
										v99[v101[2]] = v99[v101[1183 - (1123 + 57)]][v101[4]];
										v93 = v93 + 1;
										v214 = 6;
									end
									if (v214 ~= 7) then
									else
										v93 = v93 + 1 + 0;
										v101 = v89[v93];
										v99[v101[2]] = v99[v101[3]][v101[4]];
										v93 = v93 + 1;
										v101 = v89[v93];
										v99[v101[2]] = v99[v101[3]] + v99[v101[4]];
										v93 = v93 + 1;
										v101 = v89[v93];
										v214 = 8;
									end
									if (4 == v214) then
										v93 = v93 + 1;
										v101 = v89[v93];
										v99[v101[2]] = v99[v101[11 - 8]][v101[4]];
										v93 = v93 + 1;
										v101 = v89[v93];
										v99[v101[2]] = v99[v101[3]] + v99[v101[4]];
										v93 = v93 + 1;
										v101 = v89[v93];
										v214 = 5;
									end
									if (v214 ~= 2) then
									else
										v99[v101[2]] = v73[v101[3]];
										v93 = v93 + (377 - (85 + 291));
										v101 = v89[v93];
										v99[v101[1267 - (243 + 1022)]] = v99[v101[3]][v101[4]];
										v93 = v93 + 1;
										v101 = v89[v93];
										v99[v101[2]] = v99[v101[3]][v101[4]];
										v93 = v93 + 1;
										v214 = 3;
									end
									if (v214 ~= 0) then
									else
										v215 = nil;
										v99[v101[2]] = v73[v101[3]];
										v93 = v93 + 1;
										v101 = v89[v93];
										v99[v101[2]] = v99[v101[3]] - v99[v101[4]];
										v93 = v93 + 1;
										v101 = v89[v93];
										v99[v101[2]] = v73[v101[3]];
										v214 = 1;
									end
									if (v214 == 6) then
										v101 = v89[v93];
										v99[v101[2]] = v73[v101[3]];
										v93 = v93 + 1;
										v101 = v89[v93];
										v99[v101[2]] = v99[v101[3]][v101[4]];
										v93 = v93 + 1;
										v101 = v89[v93];
										v99[v101[2]] = v99[v101[3]][v101[4]];
										v214 = 7;
									end
									if (8 ~= v214) then
									else
										v215 = v101[2];
										v99[v215] = v99[v215](v21(v99, v215 + 1, v101[3]));
										v93 = v93 + (255 - (163 + 91));
										v101 = v89[v93];
										v99[v101[2]][v101[3]] = v99[v101[4]];
										v93 = v93 + (1931 - (1869 + 61));
										v101 = v89[v93];
										v93 = v101[1 + 2];
										break;
									end
								end
							else
								do
									return v99[v101[2]]();
								end
							end
						elseif (v102 == 23) then
							local v216;
							local v217;
							v99[v101[2]] = v101[3];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v101[3];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v101[3];
							v93 = v93 + 1;
							v101 = v89[v93];
							v217 = v101[2];
							v99[v217] = v99[v217](v21(v99, v217 + 1, v101[3]));
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[6 - 4]][v101[3]] = v99[v101[4]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v74[v101[3]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v99[v101[3]][v101[4]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v101[3];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v101[3];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2 - 0]] = v101[3];
							v93 = v93 + 1 + 0;
							v101 = v89[v93];
							v99[v101[2]] = v101[3 - 0];
							v93 = v93 + 1;
							v101 = v89[v93];
							v217 = v101[2];
							v99[v217] = v99[v217](v21(v99, v217 + 1, v101[3]));
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]][v101[3]] = v99[v101[4]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v74[v101[3]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v99[v101[3]][v101[4]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v99[v101[3]][v101[4]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]][v101[3]] = v99[v101[4 + 0]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v74[v101[1477 - (1329 + 145)]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v99[v101[3]][v101[4]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v73[v101[3]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v101[3];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[973 - (140 + 831)]] = v101[1853 - (1409 + 441)];
							v93 = v93 + 1;
							v101 = v89[v93];
							v217 = v101[2];
							v99[v217] = v99[v217](v21(v99, v217 + 1, v101[3]));
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[720 - (15 + 703)]] = v99[v101[2 + 1]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v217 = v101[2];
							v99[v217] = v99[v217](v21(v99, v217 + 1, v101[3]));
							v93 = v93 + (439 - (262 + 176));
							v101 = v89[v93];
							v99[v101[2]][v101[3]] = v101[4];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v74[v101[3]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v99[v101[3]][v101[4]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v99[v101[3]][v101[4]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[1723 - (345 + 1376)]][v101[3]] = v99[v101[4]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]][v101[3]] = v101[4];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v74[v101[3]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v99[v101[3]][v101[4]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v101[3];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v101[3];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v101[3];
							v93 = v93 + 1;
							v101 = v89[v93];
							v217 = v101[690 - (198 + 490)];
							v99[v217] = v99[v217](v21(v99, v217 + 1, v101[3]));
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]][v101[3]] = v99[v101[4]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v74[v101[3]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v99[v101[3]][v101[4]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v101[3];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[8 - 6]] = v101[3];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[4 - 2]] = v101[1209 - (696 + 510)];
							v93 = v93 + (1 - 0);
							v101 = v89[v93];
							v217 = v101[2];
							v99[v217] = v99[v217](v21(v99, v217 + 1, v101[3]));
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]][v101[3]] = v99[v101[4]];
							v93 = v93 + (1263 - (1091 + 171));
							v101 = v89[v93];
							v99[v101[2]] = v74[v101[3]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v99[v101[3]][v101[4]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v101[3];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[1 + 1]] = v101[3];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[6 - 4]] = v101[3];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v101[3];
							v93 = v93 + 1;
							v101 = v89[v93];
							v217 = v101[2];
							v99[v217] = v99[v217](v21(v99, v217 + 1, v101[3]));
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]][v101[3]] = v99[v101[4]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v74[v101[3]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v99[v101[3]][v101[4]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v101[3];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[6 - 4]] = v101[3];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v101[3];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v101[3];
							v93 = v93 + 1;
							v101 = v89[v93];
							v217 = v101[2];
							v99[v217] = v99[v217](v21(v99, v217 + 1, v101[3]));
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]][v101[3]] = v99[v101[4]];
							v93 = v93 + (375 - (123 + 251));
							v101 = v89[v93];
							v99[v101[2]][v101[3]] = v101[4];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v99[v101[3]][v101[4]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v217 = v101[2];
							v216 = v99[v101[3]];
							v99[v217 + 1] = v216;
							v99[v217] = v216[v101[19 - 15]];
						else
							do
								return;
							end
						end
					elseif (v102 <= 28) then
						if (v102 <= 26) then
							if (v102 == 25) then
								local v248 = v101[2];
								local v249 = v99[v248];
								for v421 = v248 + 1, v94 do
									v15(v249, v99[v421]);
								end
							else
								local v250 = 0;
								while true do
									if (v250 == 5) then
										v101 = v89[v93];
										if not v99[v101[2]] then
											v93 = v93 + (203 - (14 + 188));
										else
											v93 = v101[3];
										end
										break;
									end
									if (v250 == 2) then
										v101 = v89[v93];
										v99[v101[2]] = v99[v101[3]][v101[4]];
										v93 = v93 + 1 + 0;
										v101 = v89[v93];
										v250 = 3;
									end
									if (v250 ~= 3) then
									else
										v99[v101[2]] = v74[v101[3]];
										v93 = v93 + 1;
										v101 = v89[v93];
										v99[v101[1 + 1]] = v99[v101[3]][v101[4]];
										v250 = 4;
									end
									if (v250 ~= 0) then
									else
										v99[v101[2]] = v74[v101[3]];
										v93 = v93 + 1;
										v101 = v89[v93];
										v99[v101[2]] = v99[v101[3]][v101[4]];
										v250 = 1;
									end
									if (4 ~= v250) then
									else
										v93 = v93 + 1;
										v101 = v89[v93];
										v99[v101[838 - (660 + 176)]] = v74[v101[1 + 2]];
										v93 = v93 + 1;
										v250 = 5;
									end
									if (v250 ~= 1) then
									else
										v93 = v93 + 1;
										v101 = v89[v93];
										v99[v101[700 - (208 + 490)]] = v74[v101[3]];
										v93 = v93 + 1;
										v250 = 2;
									end
								end
							end
						elseif (v102 > 27) then
							if (v99[v101[2]] == v101[4]) then
								v93 = v93 + (676 - (534 + 141));
							else
								v93 = v101[3];
							end
						elseif not v99[v101[1 + 1]] then
							v93 = v93 + 1;
						else
							v93 = v101[3];
						end
					elseif (v102 <= 30) then
						if (v102 == 29) then
							local v251 = v101[2];
							v99[v251](v99[v251 + 1]);
						else
							local v252;
							local v253, v254;
							local v255;
							local v256;
							v99[v101[2]] = v74[v101[3]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v99[v101[3]][v101[4]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v73[v101[3]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v101[3];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v101[3];
							v93 = v93 + 1;
							v101 = v89[v93];
							v256 = v101[2 + 0];
							v99[v256] = v99[v256](v21(v99, v256 + 1, v101[3]));
							v93 = v93 + 1;
							v101 = v89[v93];
							v256 = v101[2 + 0];
							v255 = v99[v101[3]];
							v99[v256 + 1] = v255;
							v99[v256] = v255[v101[4]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v73[v101[3]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v101[6 - 3];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v101[4 - 1];
							v93 = v93 + 1;
							v101 = v89[v93];
							v256 = v101[5 - 3];
							v253, v254 = v92(v99[v256](v21(v99, v256 + 1, v101[3])));
							v94 = (v254 + v256) - 1;
							v252 = 0;
							for v422 = v256, v94 do
								v252 = v252 + 1;
								v99[v422] = v253[v252];
							end
							v93 = v93 + 1;
							v101 = v89[v93];
							v256 = v101[2];
							v253, v254 = v92(v99[v256](v21(v99, v256 + 1, v94)));
							v94 = (v254 + v256) - 1;
							v252 = 0;
							for v425 = v256, v94 do
								local v426 = 0;
								while true do
									if (0 == v426) then
										v252 = v252 + 1;
										v99[v425] = v253[v252];
										break;
									end
								end
							end
							v93 = v93 + 1;
							v101 = v89[v93];
							v256 = v101[2 + 0];
							v99[v256] = v99[v256](v21(v99, v256 + 1, v94));
							v93 = v93 + 1 + 0;
							v101 = v89[v93];
							v99[v101[2]] = v73[v101[3]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v101[3];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v101[3];
							v93 = v93 + 1;
							v101 = v89[v93];
							v256 = v101[2];
							v99[v256] = v99[v256](v21(v99, v256 + 1, v101[3]));
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]][v101[3]] = v99[v101[4]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v74[v101[3]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v99[v101[3]][v101[4]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v73[v101[3]];
							v93 = v93 + (397 - (115 + 281));
							v101 = v89[v93];
							v99[v101[2]] = v101[3];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[4 - 2]] = v101[3];
							v93 = v93 + 1;
							v101 = v89[v93];
							v256 = v101[2 + 0];
							v99[v256] = v99[v256](v21(v99, v256 + 1, v101[3]));
							v93 = v93 + (2 - 1);
							v101 = v89[v93];
							v99[v101[2]] = v99[v101[3]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v256 = v101[2];
							v99[v256] = v99[v256](v21(v99, v256 + 1, v101[3]));
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v74[v101[10 - 7]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[869 - (550 + 317)]] = v99[v101[3]][v101[4]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v101[3 - 0];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v101[3 - 0];
							v93 = v93 + (2 - 1);
							v101 = v89[v93];
							v99[v101[287 - (134 + 151)]] = v101[1668 - (970 + 695)];
							v93 = v93 + (1 - 0);
							v101 = v89[v93];
							v256 = v101[2];
							v99[v256] = v99[v256](v21(v99, v256 + 1, v101[1993 - (582 + 1408)]));
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]][v101[3]] = v99[v101[4]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v74[v101[3]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v99[v101[3]][v101[4]];
							v93 = v93 + (3 - 2);
							v101 = v89[v93];
							v99[v101[2]] = v101[3];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2 - 0]] = v101[3];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v101[3];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v101[3];
							v93 = v93 + 1;
							v101 = v89[v93];
							v256 = v101[2];
							v99[v256] = v99[v256](v21(v99, v256 + 1, v101[3]));
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]][v101[3]] = v99[v101[4]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v74[v101[3]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v99[v101[11 - 8]][v101[4]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v101[3];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v101[3];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v101[3];
							v93 = v93 + (1825 - (1195 + 629));
							v101 = v89[v93];
							v99[v101[2]] = v101[3];
							v93 = v93 + (1 - 0);
							v101 = v89[v93];
							v256 = v101[2];
							v99[v256] = v99[v256](v21(v99, v256 + 1, v101[244 - (187 + 54)]));
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]][v101[3]] = v99[v101[4]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]][v101[3]] = v101[4];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]][v101[783 - (162 + 618)]] = v101[4];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]][v101[3]] = v101[3 + 1];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v74[v101[2 + 1]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v99[v101[3]][v101[4]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v73[v101[3]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v101[3];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v101[3];
							v93 = v93 + 1;
							v101 = v89[v93];
							v256 = v101[2];
							v99[v256] = v99[v256](v21(v99, v256 + 1, v101[3]));
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v99[v101[3]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v256 = v101[2];
							v99[v256] = v99[v256](v21(v99, v256 + (1 - 0), v101[3]));
							v93 = v93 + (1 - 0);
							v101 = v89[v93];
							v99[v101[1 + 1]] = v73[v101[3]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v101[3];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v101[3];
							v93 = v93 + 1;
							v101 = v89[v93];
							v256 = v101[2];
							v99[v256] = v99[v256](v21(v99, v256 + 1, v101[3]));
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]][v101[3]] = v99[v101[4]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v74[v101[1639 - (1373 + 263)]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v99[v101[1003 - (451 + 549)]][v101[4]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v99[v101[3]][v101[4]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]][v101[1 + 2]] = v99[v101[5 - 1]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]][v101[3]] = v101[4];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v74[v101[3]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v99[v101[3]][v101[4]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v101[3];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v101[3];
							v93 = v93 + (1 - 0);
							v101 = v89[v93];
							v99[v101[2]] = v101[3];
							v93 = v93 + 1;
							v101 = v89[v93];
							v256 = v101[2];
							v99[v256] = v99[v256](v21(v99, v256 + 1, v101[3]));
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]][v101[3]] = v99[v101[4]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]][v101[3]] = v101[4];
							v93 = v93 + (1385 - (746 + 638));
							v101 = v89[v93];
							v99[v101[2]] = v74[v101[3]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v99[v101[3]][v101[4]];
						end
					elseif (v102 <= 31) then
						local v291;
						local v292;
						v292 = v101[2];
						v99[v292](v21(v99, v292 + 1, v101[3]));
						v93 = v93 + 1;
						v101 = v89[v93];
						v99[v101[2]] = v74[v101[3]];
						v93 = v93 + 1;
						v101 = v89[v93];
						v99[v101[2]] = v99[v101[3]][v101[4]];
						v93 = v93 + 1;
						v101 = v89[v93];
						v99[v101[2]] = v73[v101[3]];
						v93 = v93 + 1;
						v101 = v89[v93];
						v99[v101[2]] = v101[2 + 1];
						v93 = v93 + 1;
						v101 = v89[v93];
						v99[v101[2]] = v101[3];
						v93 = v93 + 1;
						v101 = v89[v93];
						v292 = v101[2];
						v99[v292] = v99[v292](v21(v99, v292 + 1, v101[3]));
						v93 = v93 + 1;
						v101 = v89[v93];
						v99[v101[2]] = v99[v101[3]];
						v93 = v93 + 1;
						v101 = v89[v93];
						v292 = v101[2];
						v99[v292] = v99[v292](v21(v99, v292 + 1, v101[3]));
						v93 = v93 + 1;
						v101 = v89[v93];
						v99[v101[2]] = v73[v101[3]];
						v93 = v93 + 1;
						v101 = v89[v93];
						v99[v101[2]] = v101[3];
						v93 = v93 + 1;
						v101 = v89[v93];
						v99[v101[2 - 0]] = v101[3];
						v93 = v93 + 1;
						v101 = v89[v93];
						v292 = v101[2];
						v99[v292] = v99[v292](v21(v99, v292 + 1, v101[3]));
						v93 = v93 + 1;
						v101 = v89[v93];
						v99[v101[2]][v101[3]] = v99[v101[4]];
						v93 = v93 + 1;
						v101 = v89[v93];
						v99[v101[2]] = v74[v101[3]];
						v93 = v93 + 1;
						v101 = v89[v93];
						v99[v101[2]] = v99[v101[3]][v101[4]];
						v93 = v93 + 1;
						v101 = v89[v93];
						v99[v101[2]] = v99[v101[344 - (218 + 123)]][v101[4]];
						v93 = v93 + 1;
						v101 = v89[v93];
						v99[v101[1583 - (1535 + 46)]][v101[3]] = v99[v101[4 + 0]];
						v93 = v93 + 1 + 0;
						v101 = v89[v93];
						v99[v101[2]][v101[3]] = v101[4];
						v93 = v93 + 1;
						v101 = v89[v93];
						v99[v101[2]] = v74[v101[3]];
						v93 = v93 + 1;
						v101 = v89[v93];
						v99[v101[2]] = v99[v101[3]][v101[4]];
						v93 = v93 + 1;
						v101 = v89[v93];
						v99[v101[2]] = v101[3];
						v93 = v93 + 1;
						v101 = v89[v93];
						v99[v101[2]] = v101[3];
						v93 = v93 + (561 - (306 + 254));
						v101 = v89[v93];
						v99[v101[2]] = v101[3];
						v93 = v93 + 1;
						v101 = v89[v93];
						v292 = v101[2];
						v99[v292] = v99[v292](v21(v99, v292 + 1, v101[3]));
						v93 = v93 + 1 + 0;
						v101 = v89[v93];
						v99[v101[2]][v101[3]] = v99[v101[4]];
						v93 = v93 + 1;
						v101 = v89[v93];
						v99[v101[2]] = v74[v101[3]];
						v93 = v93 + 1;
						v101 = v89[v93];
						v99[v101[2]] = v99[v101[3]][v101[4]];
						v93 = v93 + 1;
						v101 = v89[v93];
						v99[v101[2]] = v101[5 - 2];
						v93 = v93 + 1;
						v101 = v89[v93];
						v99[v101[2]] = v101[3];
						v93 = v93 + 1;
						v101 = v89[v93];
						v99[v101[2]] = v101[3];
						v93 = v93 + 1;
						v101 = v89[v93];
						v292 = v101[2];
						v99[v292] = v99[v292](v21(v99, v292 + 1, v101[3]));
						v93 = v93 + 1;
						v101 = v89[v93];
						v99[v101[2]][v101[3]] = v99[v101[4]];
						v93 = v93 + 1;
						v101 = v89[v93];
						v99[v101[1469 - (899 + 568)]] = v74[v101[3]];
						v93 = v93 + 1;
						v101 = v89[v93];
						v99[v101[2]] = v99[v101[3]][v101[4]];
						v93 = v93 + 1;
						v101 = v89[v93];
						v99[v101[2]] = v101[2 + 1];
						v93 = v93 + (2 - 1);
						v101 = v89[v93];
						v99[v101[2]] = v101[3];
						v93 = v93 + 1;
						v101 = v89[v93];
						v99[v101[2]] = v101[3];
						v93 = v93 + 1;
						v101 = v89[v93];
						v99[v101[2]] = v101[3];
						v93 = v93 + 1;
						v101 = v89[v93];
						v292 = v101[2];
						v99[v292] = v99[v292](v21(v99, v292 + 1, v101[606 - (268 + 335)]));
						v93 = v93 + 1;
						v101 = v89[v93];
						v99[v101[2]][v101[3]] = v99[v101[4]];
						v93 = v93 + 1;
						v101 = v89[v93];
						v99[v101[2]] = v74[v101[3]];
						v93 = v93 + 1;
						v101 = v89[v93];
						v99[v101[2]] = v99[v101[3]][v101[4]];
						v93 = v93 + 1;
						v101 = v89[v93];
						v99[v101[292 - (60 + 230)]] = v101[3];
						v93 = v93 + 1;
						v101 = v89[v93];
						v99[v101[2]] = v101[3];
						v93 = v93 + 1;
						v101 = v89[v93];
						v99[v101[2]] = v101[3];
						v93 = v93 + 1;
						v101 = v89[v93];
						v99[v101[2]] = v101[3];
						v93 = v93 + 1;
						v101 = v89[v93];
						v292 = v101[2];
						v99[v292] = v99[v292](v21(v99, v292 + 1, v101[3]));
						v93 = v93 + 1;
						v101 = v89[v93];
						v99[v101[2]][v101[3]] = v99[v101[4]];
						v93 = v93 + 1;
						v101 = v89[v93];
						v99[v101[2]][v101[3]] = v101[4];
						v93 = v93 + 1;
						v101 = v89[v93];
						v99[v101[2]] = v101[3] ~= 0;
						v93 = v93 + 1;
						v101 = v89[v93];
						for v427 = v101[574 - (426 + 146)], v101[3] do
							v99[v427] = nil;
						end
						v93 = v93 + 1;
						v101 = v89[v93];
						v99[v101[2]] = v99[v101[3]][v101[4]];
						v93 = v93 + 1;
						v101 = v89[v93];
						v292 = v101[2];
						v291 = v99[v101[3]];
						v99[v292 + 1] = v291;
						v99[v292] = v291[v101[4]];
					elseif (v102 > 32) then
						v99[v101[2]] = v74[v101[3]];
					else
						v99[v101[1 + 1]] = not v99[v101[3]];
					end
				elseif (v102 <= 50) then
					if (v102 <= 41) then
						if (v102 <= 37) then
							if (v102 <= 35) then
								if (v102 == 34) then
									v99[v101[2]] = v101[3] ~= 0;
								else
									v99[v101[2]][v101[3]] = v101[4];
								end
							elseif (v102 > 36) then
								v99[v101[2]] = v99[v101[3]] % v99[v101[4]];
							else
								v99[v101[2]] = v99[v101[3]] - v99[v101[1460 - (282 + 1174)]];
							end
						elseif (v102 <= (850 - (569 + 242))) then
							if (v102 > (109 - 71)) then
								v99[v101[2]] = v101[3] + v99[v101[1 + 3]];
							else
								local v321 = v90[v101[3]];
								local v322;
								local v323 = {};
								v322 = v18({}, {[v7("\156\216\133\39\167\226\148", "\73\195\135\236")]=function(v429, v430)
									local v431 = 0;
									local v432;
									while true do
										if (v431 == 0) then
											v432 = v323[v430];
											return v432[1][v432[2]];
										end
									end
								end,[v7("\194\55\50\31\87\13\3\201\248\16", "\173\157\104\92\122\32\100\109")]=function(v433, v434, v435)
									local v436 = v323[v434];
									v436[1025 - (706 + 318)][v436[2]] = v435;
								end});
								for v438 = 1, v101[4] do
									v93 = v93 + (1252 - (721 + 530));
									local v439 = v89[v93];
									if (v439[1] == 41) then
										v323[v438 - 1] = {v99,v439[3]};
									else
										v323[v438 - 1] = {v73,v439[3]};
									end
									v98[#v98 + 1] = v323;
								end
								v99[v101[2]] = v40(v321, v322, v74);
							end
						elseif (v102 > 40) then
							v99[v101[2]] = v99[v101[3]];
						else
							local v327 = 0;
							local v328;
							local v329;
							while true do
								if (v327 ~= 2) then
								else
									v329 = v101[2];
									v99[v329] = v99[v329](v99[v329 + 1]);
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v73[v101[3]];
									v93 = v93 + 1;
									v327 = 3;
								end
								if (v327 ~= 6) then
								else
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v99[v101[3]][v101[4]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v327 = 7;
								end
								if (v327 ~= 1) then
								else
									v329 = v101[2];
									v328 = v99[v101[3]];
									v99[v329 + (2 - 1)] = v328;
									v99[v329] = v328[v101[4]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v327 = 2;
								end
								if (v327 ~= 13) then
								else
									v329 = v101[2];
									v99[v329] = v99[v329](v21(v99, v329 + 1, v101[2 + 1]));
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]][v101[3]] = v99[v101[4]];
									v93 = v93 + 1 + 0;
									v327 = 14;
								end
								if (v327 ~= 5) then
								else
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2 + 0]][v101[3]] = v101[4];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[1502 - (1408 + 92)]] = v74[v101[3]];
									v327 = 6;
								end
								if (v327 ~= 4) then
								else
									v101 = v89[v93];
									v329 = v101[2];
									v99[v329] = v99[v329](v21(v99, v329 + 1, v101[703 - (271 + 429)]));
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]][v101[3]] = v99[v101[4]];
									v327 = 5;
								end
								if (v327 ~= 11) then
								else
									v99[v101[1173 - (418 + 753)]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v327 = 12;
								end
								if (v327 ~= 9) then
								else
									v99[v329] = v99[v329](v21(v99, v329 + 1, v101[3]));
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]][v101[3]] = v99[v101[4]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v327 = 10;
								end
								if (v327 ~= 15) then
								else
									v101 = v89[v93];
									v329 = v101[1 + 1];
									v328 = v99[v101[3]];
									v99[v329 + 1 + 0] = v328;
									v99[v329] = v328[v101[4]];
									break;
								end
								if (v327 == 3) then
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + 1 + 0;
									v327 = 4;
								end
								if (v327 ~= 0) then
								else
									v328 = nil;
									v329 = nil;
									v329 = v101[1273 - (945 + 326)];
									v99[v329](v21(v99, v329 + 1, v101[3]));
									v93 = v93 + 1;
									v101 = v89[v93];
									v327 = 1;
								end
								if (v327 ~= 12) then
								else
									v99[v101[2]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v327 = 13;
								end
								if (v327 ~= 7) then
								else
									v93 = v93 + (1087 - (461 + 625));
									v101 = v89[v93];
									v99[v101[2]] = v101[1291 - (993 + 295)];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v327 = 8;
								end
								if (10 ~= v327) then
								else
									v99[v101[2]] = v74[v101[1 + 2]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v99[v101[3]][v101[4]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v327 = 11;
								end
								if (v327 == 8) then
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v329 = v101[2];
									v327 = 9;
								end
								if (v327 ~= 14) then
								else
									v101 = v89[v93];
									v99[v101[2]][v101[3]] = v99[v101[4]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v99[v101[3]][v101[4]];
									v93 = v93 + 1;
									v327 = 15;
								end
							end
						end
					elseif (v102 <= 45) then
						if (v102 <= 43) then
							if (v102 == 42) then
								local v330 = 0;
								while true do
									if (v330 ~= 0) then
									else
										v99[v101[2]] = v99[v101[3]][v101[4]];
										v93 = v93 + 1;
										v101 = v89[v93];
										v99[v101[2]] = v74[v101[3]];
										v330 = 1;
									end
									if (v330 ~= 1) then
									else
										v93 = v93 + 1;
										v101 = v89[v93];
										v99[v101[2]] = v99[v101[3]][v101[4]];
										v93 = v93 + 1;
										v330 = 2;
									end
									if (2 ~= v330) then
									else
										v101 = v89[v93];
										v99[v101[2]] = v99[v101[3]][v101[4]];
										v93 = v93 + 1;
										v101 = v89[v93];
										v330 = 3;
									end
									if (v330 ~= 3) then
									else
										if (v99[v101[2]] == v99[v101[4]]) then
											v93 = v93 + 1;
										else
											v93 = v101[3];
										end
										break;
									end
								end
							else
								local v331 = v101[2];
								local v332, v333 = v92(v99[v331](v21(v99, v331 + 1, v101[3])));
								v94 = (v333 + v331) - 1;
								local v334 = 0;
								for v441 = v331, v94 do
									local v442 = 0;
									while true do
										if (v442 == 0) then
											v334 = v334 + 1;
											v99[v441] = v332[v334];
											break;
										end
									end
								end
							end
						elseif (v102 == (573 - (406 + 123))) then
							local v335 = 0;
							local v336;
							while true do
								if (0 ~= v335) then
								else
									v336 = v101[2];
									v99[v336] = v99[v336](v99[v336 + 1]);
									break;
								end
							end
						else
							v99[v101[2]] = v73[v101[3]];
						end
					elseif (v102 <= 47) then
						if (v102 > 46) then
							for v443 = v101[2], v101[3] do
								v99[v443] = nil;
							end
						else
							local v339 = 0;
							local v340;
							local v341;
							while true do
								if (v339 == 3) then
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v73[v101[3]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[4 - 2]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + 1;
									v339 = 4;
								end
								if (v339 ~= 14) then
								else
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + (1 - 0);
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v339 = 15;
								end
								if (v339 == 8) then
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]][v101[3]] = v99[v101[4]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v74[v101[3]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v99[v101[3]][v101[4]];
									v93 = v93 + 1;
									v339 = 9;
								end
								if (v339 == 2) then
									v101 = v89[v93];
									v341 = v101[2];
									v99[v341] = v99[v341](v21(v99, v341 + 1, v101[1148 - (466 + 679)]));
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v99[v101[3]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v341 = v101[2];
									v99[v341] = v99[v341](v21(v99, v341 + 1, v101[3]));
									v339 = 3;
								end
								if (v339 ~= 11) then
								else
									v99[v101[2]] = v99[v101[3]][v101[4]];
									v93 = v93 + (104 - (17 + 86));
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2 + 0]] = v101[3];
									v339 = 12;
								end
								if (v339 ~= 5) then
								else
									v101 = v89[v93];
									v99[v101[2]] = v99[v101[3]][v101[4]];
									v93 = v93 + 1 + 0;
									v101 = v89[v93];
									v99[v101[1 + 1]] = v99[v101[3]][v101[4]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]][v101[3]] = v99[v101[4]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v339 = 6;
								end
								if (v339 ~= 16) then
								else
									v99[v101[2]] = v99[v101[3]][v101[1 + 3]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v341 = v101[2];
									v340 = v99[v101[3]];
									v99[v341 + 1] = v340;
									v99[v341] = v340[v101[4]];
									break;
								end
								if (v339 == 13) then
									v93 = v93 + (2 - 1);
									v101 = v89[v93];
									v99[v101[168 - (122 + 44)]] = v74[v101[3]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v99[v101[3]][v101[4]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + 1;
									v339 = 14;
								end
								if (v339 ~= 10) then
								else
									v341 = v101[2];
									v99[v341] = v99[v341](v21(v99, v341 + 1, v101[3]));
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[586 - (57 + 527)]][v101[3]] = v99[v101[4]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[1429 - (41 + 1386)]] = v74[v101[3]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v339 = 11;
								end
								if (v339 ~= 15) then
								else
									v341 = v101[2];
									v99[v341] = v99[v341](v21(v99, v341 + 1, v101[3]));
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[6 - 4]][v101[3]] = v99[v101[4]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]][v101[3 + 0]] = v101[4];
									v93 = v93 + 1;
									v101 = v89[v93];
									v339 = 16;
								end
								if (v339 == 12) then
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v341 = v101[2];
									v99[v341] = v99[v341](v21(v99, v341 + 1, v101[3]));
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]][v101[6 - 3]] = v99[v101[4]];
									v339 = 13;
								end
								if (v339 ~= 0) then
								else
									v340 = nil;
									v341 = nil;
									v341 = v101[2];
									v99[v341](v21(v99, v341 + (1770 - (1749 + 20)), v101[3]));
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v74[v101[3]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v99[v101[3]][v101[4]];
									v339 = 1;
								end
								if (v339 == 9) then
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v339 = 10;
								end
								if (v339 ~= 4) then
								else
									v101 = v89[v93];
									v341 = v101[5 - 3];
									v99[v341] = v99[v341](v21(v99, v341 + 1, v101[3]));
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]][v101[3]] = v99[v101[1904 - (106 + 1794)]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v74[v101[3]];
									v93 = v93 + 1;
									v339 = 5;
								end
								if (v339 ~= 7) then
								else
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + (2 - 1);
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v341 = v101[2];
									v99[v341] = v99[v341](v21(v99, v341 + (115 - (4 + 110)), v101[3]));
									v339 = 8;
								end
								if (v339 ~= 1) then
								else
									v93 = v93 + 1 + 0;
									v101 = v89[v93];
									v99[v101[2]] = v73[v101[3]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + (1323 - (1249 + 73));
									v101 = v89[v93];
									v99[v101[1 + 1]] = v101[3];
									v93 = v93 + 1;
									v339 = 2;
								end
								if (v339 == 6) then
									v99[v101[2]][v101[3]] = v101[4];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v74[v101[3]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v99[v101[3]][v101[4]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[8 - 5];
									v339 = 7;
								end
							end
						end
					elseif (v102 <= 48) then
						local v342 = 0;
						while true do
							if (v342 ~= 1) then
							else
								v99[v101[2]] = v73[v101[3 + 0]];
								v93 = v93 + 1;
								v101 = v89[v93];
								v342 = 2;
							end
							if (v342 ~= 2) then
							else
								v99[v101[2]] = v99[v101[3]][v101[4]];
								v93 = v93 + (1258 - (1043 + 214));
								v101 = v89[v93];
								v342 = 3;
							end
							if (v342 ~= 5) then
							else
								do
									return;
								end
								break;
							end
							if (3 ~= v342) then
							else
								v99[v101[2]] = not v99[v101[3]];
								v93 = v93 + 1;
								v101 = v89[v93];
								v342 = 4;
							end
							if (v342 ~= 4) then
							else
								v99[v101[2]][v101[3]] = v99[v101[4]];
								v93 = v93 + 1;
								v101 = v89[v93];
								v342 = 5;
							end
							if (v342 ~= 0) then
							else
								v99[v101[3 - 1]] = v73[v101[3]];
								v93 = v93 + (66 - (30 + 35));
								v101 = v89[v93];
								v342 = 1;
							end
						end
					elseif (v102 == 49) then
						v99[v101[2]] = v73[v101[3]];
						v93 = v93 + 1;
						v101 = v89[v93];
						v99[v101[2]] = v99[v101[3]][v101[4]];
						v93 = v93 + 1;
						v101 = v89[v93];
						v99[v101[7 - 5]] = v74[v101[3]];
						v93 = v93 + 1;
						v101 = v89[v93];
						v99[v101[2]] = v99[v101[3]][v101[4]];
						v93 = v93 + 1;
						v101 = v89[v93];
						v99[v101[2]] = v99[v101[3]][v101[4]];
						v93 = v93 + 1;
						v101 = v89[v93];
						if (v99[v101[2]] == v99[v101[4]]) then
							v93 = v93 + 1;
						else
							v93 = v101[3];
						end
					else
						local v482 = 0;
						local v483;
						while true do
							if (0 ~= v482) then
							else
								v483 = v101[1214 - (323 + 889)];
								v99[v483] = v99[v483](v21(v99, v483 + 1, v101[7 - 4]));
								break;
							end
						end
					end
				elseif (v102 <= (639 - (361 + 219))) then
					if (v102 <= 54) then
						if (v102 <= 52) then
							if (v102 > (371 - (53 + 267))) then
								local v343 = 0;
								local v344;
								while true do
									if (v343 == 0) then
										v344 = v101[2];
										do
											return v21(v99, v344, v94);
										end
										break;
									end
								end
							else
								local v345 = 0;
								local v346;
								while true do
									if (v345 ~= 0) then
									else
										v346 = v101[2];
										v99[v346] = v99[v346](v21(v99, v346 + 1, v94));
										break;
									end
								end
							end
						elseif (v102 == (12 + 41)) then
							local v347;
							local v348, v349;
							local v350;
							v99[v101[2]] = v99[v101[3]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v73[v101[3]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v73[v101[3]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[415 - (15 + 398)]] = v73[v101[3]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v73[v101[3]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v99[v101[3]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v99[v101[985 - (18 + 964)]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[7 - 5]] = v99[v101[3]] + v101[4];
							v93 = v93 + 1 + 0;
							v101 = v89[v93];
							v350 = v101[2];
							v348, v349 = v92(v99[v350](v21(v99, v350 + 1, v101[3])));
							v94 = (v349 + v350) - (1 + 0);
							v347 = 0;
							for v445 = v350, v94 do
								v347 = v347 + (851 - (20 + 830));
								v99[v445] = v348[v347];
							end
							v93 = v93 + 1;
							v101 = v89[v93];
							v350 = v101[2];
							v99[v350] = v99[v350](v21(v99, v350 + 1 + 0, v94));
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v73[v101[3]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v73[v101[3]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v99[v101[129 - (116 + 10)]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = #v99[v101[3]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v99[v101[3]] % v99[v101[4]];
							v93 = v93 + 1 + 0;
							v101 = v89[v93];
							v99[v101[740 - (542 + 196)]] = v101[6 - 3] + v99[v101[4]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = #v99[v101[3]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v99[v101[3]] % v99[v101[4]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v101[3] + v99[v101[4]];
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[2]] = v99[v101[3]] + v101[4];
							v93 = v93 + 1 + 0;
							v101 = v89[v93];
							v350 = v101[2 + 0];
							v348, v349 = v92(v99[v350](v21(v99, v350 + 1, v101[3])));
							v94 = (v349 + v350) - 1;
							v347 = 0;
							for v448 = v350, v94 do
								v347 = v347 + 1;
								v99[v448] = v348[v347];
							end
							v93 = v93 + 1;
							v101 = v89[v93];
							v350 = v101[2];
							v348, v349 = v92(v99[v350](v21(v99, v350 + 1, v94)));
							v94 = (v349 + v350) - (1 + 0);
							v347 = 0;
							for v451 = v350, v94 do
								v347 = v347 + 1;
								v99[v451] = v348[v347];
							end
							v93 = v93 + 1;
							v101 = v89[v93];
							v350 = v101[2];
							v99[v350] = v99[v350](v21(v99, v350 + 1, v94));
							v93 = v93 + 1;
							v101 = v89[v93];
							v99[v101[4 - 2]] = v99[v101[3]] % v101[4];
							v93 = v93 + 1;
							v101 = v89[v93];
							v350 = v101[4 - 2];
							v348, v349 = v92(v99[v350](v99[v350 + 1]));
							v94 = (v349 + v350) - 1;
							v347 = 0;
							for v454 = v350, v94 do
								v347 = v347 + 1;
								v99[v454] = v348[v347];
							end
							v93 = v93 + 1;
							v101 = v89[v93];
							v350 = v101[2];
							v99[v350](v21(v99, v350 + (1552 - (1126 + 425)), v94));
						else
							local v365 = 0;
							local v366;
							local v367;
							local v368;
							local v369;
							local v370;
							while true do
								if (15 == v365) then
									v366 = 753 - (239 + 514);
									for v1158 = v370, v94 do
										local v1159 = 0;
										while true do
											if (0 ~= v1159) then
											else
												v366 = v366 + 1;
												v99[v1158] = v367[v366];
												break;
											end
										end
									end
									v93 = v93 + 1;
									v101 = v89[v93];
									v370 = v101[2];
									v99[v370] = v99[v370](v21(v99, v370 + 1, v94));
									break;
								end
								if (v365 == 10) then
									v101 = v89[v93];
									v370 = v101[2];
									v369 = v99[v101[3]];
									v99[v370 + 1] = v369;
									v99[v370] = v369[v101[4]];
									v93 = v93 + 1 + 0;
									v101 = v89[v93];
									v99[v101[2]] = v73[v101[6 - 3]];
									v93 = v93 + 1;
									v365 = 11;
								end
								if (v365 ~= 1) then
								else
									v101 = v89[v93];
									v99[v101[2]] = v73[v101[3]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[408 - (118 + 287)];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + 1;
									v365 = 2;
								end
								if (v365 ~= 2) then
								else
									v101 = v89[v93];
									v370 = v101[7 - 5];
									v367, v368 = v92(v99[v370](v21(v99, v370 + 1, v101[3])));
									v94 = (v368 + v370) - (1122 - (118 + 1003));
									v366 = 0;
									for v1160 = v370, v94 do
										v366 = v366 + 1;
										v99[v1160] = v367[v366];
									end
									v93 = v93 + 1;
									v101 = v89[v93];
									v370 = v101[2];
									v365 = 3;
								end
								if (v365 ~= 5) then
								else
									v99[v101[2]] = v101[3];
									v93 = v93 + (4 - 3);
									v101 = v89[v93];
									v370 = v101[2];
									v367, v368 = v92(v99[v370](v21(v99, v370 + 1, v101[3])));
									v94 = (v368 + v370) - 1;
									v366 = 0;
									for v1163 = v370, v94 do
										local v1164 = 0;
										while true do
											if (v1164 ~= 0) then
											else
												v366 = v366 + 1;
												v99[v1163] = v367[v366];
												break;
											end
										end
									end
									v93 = v93 + 1 + 0;
									v365 = 6;
								end
								if (v365 ~= 11) then
								else
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v370 = v101[2];
									v367, v368 = v92(v99[v370](v21(v99, v370 + 1, v101[3])));
									v365 = 12;
								end
								if (v365 == 0) then
									v366 = nil;
									v367, v368 = nil;
									v369 = nil;
									v370 = nil;
									v370 = v101[2];
									v369 = v99[v101[3]];
									v99[v370 + 1] = v369;
									v99[v370] = v369[v101[4]];
									v93 = v93 + 1;
									v365 = 1;
								end
								if (v365 ~= 8) then
								else
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + 1 + 0;
									v101 = v89[v93];
									v370 = v101[2];
									v367, v368 = v92(v99[v370](v21(v99, v370 + 1, v101[3])));
									v94 = (v368 + v370) - 1;
									v366 = 0;
									v365 = 9;
								end
								if (7 == v365) then
									v369 = v99[v101[3]];
									v99[v370 + (1 - 0)] = v369;
									v99[v370] = v369[v101[4]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v73[v101[3 + 0]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v365 = 8;
								end
								if (v365 ~= 14) then
								else
									v99[v101[2]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v370 = v101[2];
									v367, v368 = v92(v99[v370](v21(v99, v370 + 1 + 0, v101[14 - 11])));
									v94 = (v368 + v370) - 1;
									v365 = 15;
								end
								if (v365 ~= 9) then
								else
									for v1165 = v370, v94 do
										local v1166 = 0;
										while true do
											if (v1166 ~= 0) then
											else
												v366 = v366 + 1;
												v99[v1165] = v367[v366];
												break;
											end
										end
									end
									v93 = v93 + 1;
									v101 = v89[v93];
									v370 = v101[2 + 0];
									v99[v370] = v99[v370](v21(v99, v370 + 1, v94));
									v93 = v93 + 1 + 0;
									v101 = v89[v93];
									v99[v101[2]] = v99[v101[3]][v101[4]];
									v93 = v93 + 1;
									v365 = 10;
								end
								if (v365 ~= 13) then
								else
									v370 = v101[2];
									v369 = v99[v101[3]];
									v99[v370 + 1] = v369;
									v99[v370] = v369[v101[4]];
									v93 = v93 + (2 - 1);
									v101 = v89[v93];
									v99[v101[2]] = v73[v101[3]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v365 = 14;
								end
								if (v365 ~= 3) then
								else
									v99[v370] = v99[v370](v21(v99, v370 + (2 - 1), v94));
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v74[v101[3]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v370 = v101[2];
									v369 = v99[v101[380 - (142 + 235)]];
									v99[v370 + 1] = v369;
									v365 = 4;
								end
								if (v365 == 4) then
									v99[v370] = v369[v101[4]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v73[v101[3]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v365 = 5;
								end
								if (v365 ~= 12) then
								else
									v94 = (v368 + v370) - 1;
									v366 = 0;
									for v1167 = v370, v94 do
										local v1168 = 0;
										while true do
											if (v1168 == 0) then
												v366 = v366 + 1;
												v99[v1167] = v367[v366];
												break;
											end
										end
									end
									v93 = v93 + (2 - 1);
									v101 = v89[v93];
									v370 = v101[2];
									v99[v370] = v99[v370](v21(v99, v370 + 1, v94));
									v93 = v93 + 1;
									v101 = v89[v93];
									v365 = 13;
								end
								if (6 ~= v365) then
								else
									v101 = v89[v93];
									v370 = v101[2];
									v99[v370] = v99[v370](v21(v99, v370 + 1, v94));
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v74[v101[3]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v370 = v101[979 - (553 + 424)];
									v365 = 7;
								end
							end
						end
					elseif (v102 <= 56) then
						if (v102 > 55) then
							local v371 = 0;
							local v372;
							local v373;
							local v374;
							local v375;
							while true do
								if (v371 ~= 7) then
								else
									v99[v375] = v99[v375](v21(v99, v375 + 1, v94));
									v93 = v93 + (1330 - (797 + 532));
									v101 = v89[v93];
									v371 = 8;
								end
								if (v371 ~= 5) then
								else
									v94 = (v374 + v375) - 1;
									v372 = 0;
									for v1169 = v375, v94 do
										local v1170 = 0;
										while true do
											if (v1170 ~= 0) then
											else
												v372 = v372 + 1;
												v99[v1169] = v373[v372];
												break;
											end
										end
									end
									v371 = 6;
								end
								if (v371 ~= 4) then
								else
									v101 = v89[v93];
									v375 = v101[2];
									v373, v374 = v92(v99[v375](v21(v99, v375 + 1, v101[2 + 1])));
									v371 = 5;
								end
								if (0 == v371) then
									v372 = nil;
									v373, v374 = nil;
									v375 = nil;
									v371 = 1;
								end
								if (v371 ~= 6) then
								else
									v93 = v93 + 1;
									v101 = v89[v93];
									v375 = v101[2];
									v371 = 7;
								end
								if (v371 ~= 1) then
								else
									v99[v101[2]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v371 = 2;
								end
								if (v371 ~= 2) then
								else
									v375 = v101[2];
									v99[v375] = v99[v375](v21(v99, v375 + 1, v101[3]));
									v93 = v93 + 1;
									v371 = 3;
								end
								if (v371 ~= 8) then
								else
									if (v99[v101[2]] == v101[3 + 1]) then
										v93 = v93 + 1;
									else
										v93 = v101[2 + 1];
									end
									break;
								end
								if (v371 ~= 3) then
								else
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + 1;
									v371 = 4;
								end
							end
						else
							local v376 = 0;
							local v377;
							while true do
								if (v376 ~= 0) then
								else
									v377 = v101[2];
									do
										return v99[v377](v21(v99, v377 + 1, v101[3]));
									end
									break;
								end
							end
						end
					elseif (v102 <= 57) then
						v99[v101[2]][v101[3]] = v99[v101[4]];
					elseif (v102 == 58) then
						v99[v101[2]] = v99[v101[3]] % v101[9 - 5];
					else
						local v485 = 0;
						local v486;
						local v487;
						while true do
							if (v485 ~= 0) then
							else
								v486 = nil;
								v487 = nil;
								v487 = v101[2];
								v99[v487](v21(v99, v487 + (1203 - (373 + 829)), v101[734 - (476 + 255)]));
								v93 = v93 + 1;
								v101 = v89[v93];
								v485 = 1;
							end
							if (6 ~= v485) then
							else
								v93 = v93 + 1;
								v101 = v89[v93];
								v99[v101[2]] = v101[1 + 2];
								v93 = v93 + 1;
								v101 = v89[v93];
								v99[v101[2 - 0]] = v101[339 - (144 + 192)];
								v485 = 7;
							end
							if (v485 == 2) then
								v487 = v101[2];
								v99[v487] = v99[v487](v99[v487 + 1]);
								v93 = v93 + 1;
								v101 = v89[v93];
								v99[v101[1132 - (369 + 761)]] = v73[v101[3]];
								v93 = v93 + 1 + 0;
								v485 = 3;
							end
							if (v485 ~= 5) then
							else
								v93 = v93 + (1 - 0);
								v101 = v89[v93];
								v99[v101[3 - 1]] = v74[v101[3]];
								v93 = v93 + 1;
								v101 = v89[v93];
								v99[v101[240 - (64 + 174)]] = v99[v101[3]][v101[4]];
								v485 = 6;
							end
							if (v485 ~= 7) then
							else
								v93 = v93 + 1;
								v101 = v89[v93];
								v99[v101[2]] = v101[3];
								v93 = v93 + 1;
								v101 = v89[v93];
								v99[v101[2]] = v101[3];
								v485 = 8;
							end
							if (11 ~= v485) then
							else
								v99[v487] = v486[v101[4]];
								break;
							end
							if (v485 ~= 4) then
							else
								v101 = v89[v93];
								v487 = v101[2];
								v99[v487] = v99[v487](v21(v99, v487 + 1, v101[3]));
								v93 = v93 + 1;
								v101 = v89[v93];
								v99[v101[2]][v101[3]] = v99[v101[4]];
								v485 = 5;
							end
							if (v485 ~= 9) then
							else
								v99[v101[2]][v101[3]] = v99[v101[4]];
								v93 = v93 + 1;
								v101 = v89[v93];
								v99[v101[2]][v101[3]] = v99[v101[4]];
								v93 = v93 + 1;
								v101 = v89[v93];
								v485 = 10;
							end
							if (v485 ~= 8) then
							else
								v93 = v93 + 1;
								v101 = v89[v93];
								v487 = v101[2];
								v99[v487] = v99[v487](v21(v99, v487 + 1, v101[3]));
								v93 = v93 + 1;
								v101 = v89[v93];
								v485 = 9;
							end
							if (v485 ~= 10) then
							else
								v99[v101[2]] = v99[v101[3]][v101[4]];
								v93 = v93 + 1;
								v101 = v89[v93];
								v487 = v101[2];
								v486 = v99[v101[3]];
								v99[v487 + (217 - (42 + 174))] = v486;
								v485 = 11;
							end
							if (v485 ~= 1) then
							else
								v487 = v101[2];
								v486 = v99[v101[3]];
								v99[v487 + 1] = v486;
								v99[v487] = v486[v101[4]];
								v93 = v93 + 1;
								v101 = v89[v93];
								v485 = 2;
							end
							if (3 == v485) then
								v101 = v89[v93];
								v99[v101[2]] = v101[3];
								v93 = v93 + 1;
								v101 = v89[v93];
								v99[v101[2]] = v101[3];
								v93 = v93 + 1;
								v485 = 4;
							end
						end
					end
				elseif (v102 <= 63) then
					if (v102 <= 61) then
						if (v102 == (46 + 14)) then
							local v380 = 0;
							local v381;
							local v382;
							while true do
								if (v380 ~= 7) then
								else
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]][v101[3]] = v101[4];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v74[v101[3]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v99[v101[3]][v101[5 - 1]];
									v93 = v93 + 1;
									v380 = 8;
								end
								if (v380 ~= 15) then
								else
									v99[v101[2]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v380 = 16;
								end
								if (v380 ~= 1) then
								else
									v101 = v89[v93];
									v382 = v101[2];
									v99[v382] = v99[v382](v21(v99, v382 + 1, v101[3]));
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2 + 0]][v101[3]] = v99[v101[4]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v74[v101[3]];
									v93 = v93 + 1;
									v380 = 2;
								end
								if (17 ~= v380) then
								else
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v99[v101[3]][v101[4]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v382 = v101[2];
									v381 = v99[v101[3]];
									v99[v382 + 1] = v381;
									v99[v382] = v381[v101[4]];
									break;
								end
								if (v380 ~= 11) then
								else
									v93 = v93 + 1;
									v101 = v89[v93];
									v382 = v101[2];
									v99[v382] = v99[v382](v21(v99, v382 + 1, v101[3 + 0]));
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]][v101[3]] = v99[v101[4]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v74[v101[3]];
									v380 = 12;
								end
								if (v380 ~= 8) then
								else
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v380 = 9;
								end
								if (v380 ~= 12) then
								else
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v99[v101[3]][v101[4]];
									v93 = v93 + (477 - (41 + 435));
									v101 = v89[v93];
									v99[v101[1003 - (938 + 63)]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2 + 0]] = v101[3];
									v93 = v93 + 1;
									v380 = 13;
								end
								if (v380 == 2) then
									v101 = v89[v93];
									v99[v101[1 + 1]] = v99[v101[1507 - (363 + 1141)]][v101[4]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v73[v101[3]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[1582 - (1183 + 397)]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v380 = 3;
								end
								if (v380 == 0) then
									v381 = nil;
									v382 = nil;
									v99[v101[2]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + 1;
									v380 = 1;
								end
								if (v380 ~= 14) then
								else
									v101 = v89[v93];
									v99[v101[2]][v101[3]] = v99[v101[4]];
									v93 = v93 + (1126 - (936 + 189));
									v101 = v89[v93];
									v99[v101[2]] = v74[v101[3]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v99[v101[3]][v101[4]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v380 = 15;
								end
								if (10 ~= v380) then
								else
									v99[v101[2]] = v99[v101[3]][v101[4]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[859 - (564 + 292)];
									v93 = v93 + (1 - 0);
									v101 = v89[v93];
									v99[v101[5 - 3]] = v101[3];
									v93 = v93 + (305 - (244 + 60));
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v380 = 11;
								end
								if (v380 ~= 3) then
								else
									v99[v101[2]] = v101[8 - 5];
									v93 = v93 + 1;
									v101 = v89[v93];
									v382 = v101[2];
									v99[v382] = v99[v382](v21(v99, v382 + 1, v101[3 + 0]));
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v99[v101[3]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v380 = 4;
								end
								if (v380 ~= 9) then
								else
									v382 = v101[2 + 0];
									v99[v382] = v99[v382](v21(v99, v382 + 1, v101[3]));
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]][v101[3]] = v99[v101[4]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v74[v101[3]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v380 = 10;
								end
								if (6 ~= v380) then
								else
									v99[v101[1935 - (565 + 1368)]] = v74[v101[3]];
									v93 = v93 + (3 - 2);
									v101 = v89[v93];
									v99[v101[2]] = v99[v101[3]][v101[4]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v99[v101[3]][v101[1665 - (1477 + 184)]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]][v101[3]] = v99[v101[4]];
									v380 = 7;
								end
								if (v380 ~= 16) then
								else
									v93 = v93 + 1;
									v101 = v89[v93];
									v382 = v101[2];
									v99[v382] = v99[v382](v21(v99, v382 + 1, v101[3]));
									v93 = v93 + 1 + 0;
									v101 = v89[v93];
									v99[v101[1615 - (1565 + 48)]][v101[3]] = v99[v101[4]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]][v101[3]] = v101[4];
									v380 = 17;
								end
								if (13 ~= v380) then
								else
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v382 = v101[2];
									v99[v382] = v99[v382](v21(v99, v382 + 1, v101[3]));
									v93 = v93 + 1;
									v380 = 14;
								end
								if (v380 == 4) then
									v382 = v101[2];
									v99[v382] = v99[v382](v21(v99, v382 + 1 + 0, v101[3]));
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v73[v101[3]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + (1976 - (1913 + 62));
									v101 = v89[v93];
									v380 = 5;
								end
								if (5 ~= v380) then
								else
									v99[v101[2]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v382 = v101[2 + 0];
									v99[v382] = v99[v382](v21(v99, v382 + 1, v101[7 - 4]));
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]][v101[3]] = v99[v101[4]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v380 = 6;
								end
							end
						else
							v73[v101[3]] = v99[v101[2]];
						end
					elseif (v102 > 62) then
						v99[v101[2]] = v99[v101[3]] + v101[4];
					else
						local v386 = v101[2];
						local v387, v388 = v92(v99[v386](v99[v386 + 1]));
						v94 = (v388 + v386) - 1;
						local v389 = 0 + 0;
						for v457 = v386, v94 do
							local v458 = 0;
							while true do
								if (v458 == 0) then
									v389 = v389 + 1;
									v99[v457] = v387[v389];
									break;
								end
							end
						end
					end
				elseif (v102 <= 65) then
					if (v102 > 64) then
						local v390 = 0;
						local v391;
						local v392;
						while true do
							if (v390 ~= 3) then
							else
								v93 = v93 + (268 - (176 + 91));
								v101 = v89[v93];
								v392 = v101[2];
								v99[v392](v21(v99, v392 + 1, v101[3]));
								v390 = 4;
							end
							if (v390 == 1) then
								v101 = v89[v93];
								v392 = v101[2];
								v391 = v99[v101[3]];
								v99[v392 + 1] = v391;
								v390 = 2;
							end
							if (v390 ~= 0) then
							else
								v391 = nil;
								v392 = nil;
								v99[v101[1140 - (782 + 356)]] = v73[v101[3]];
								v93 = v93 + 1;
								v390 = 1;
							end
							if (v390 == 2) then
								v99[v392] = v391[v101[4]];
								v93 = v93 + 1;
								v101 = v89[v93];
								v99[v101[2]] = v73[v101[3]];
								v390 = 3;
							end
							if (v390 ~= 4) then
							else
								v93 = v93 + 1;
								v101 = v89[v93];
								do
									return;
								end
								break;
							end
						end
					else
						local v393;
						local v394, v395;
						local v396;
						local v397;
						v99[v101[4 - 2]] = v73[v101[3]];
						v93 = v93 + 1;
						v101 = v89[v93];
						v397 = v101[2 - 0];
						v396 = v99[v101[3]];
						v99[v397 + (1093 - (975 + 117))] = v396;
						v99[v397] = v396[v101[4]];
						v93 = v93 + 1;
						v101 = v89[v93];
						v99[v101[2]] = v73[v101[3]];
						v93 = v93 + 1;
						v101 = v89[v93];
						v99[v101[2]] = v101[3];
						v93 = v93 + 1;
						v101 = v89[v93];
						v99[v101[2]] = v101[3];
						v93 = v93 + (1876 - (157 + 1718));
						v101 = v89[v93];
						v397 = v101[2];
						v394, v395 = v92(v99[v397](v21(v99, v397 + 1, v101[3])));
						v94 = (v395 + v397) - 1;
						v393 = 0;
						for v459 = v397, v94 do
							local v460 = 0;
							while true do
								if (v460 ~= 0) then
								else
									v393 = v393 + 1;
									v99[v459] = v394[v393];
									break;
								end
							end
						end
						v93 = v93 + 1;
						v101 = v89[v93];
						v397 = v101[2];
						v99[v397](v21(v99, v397 + 1, v94));
						v93 = v93 + 1 + 0;
						v101 = v89[v93];
						do
							return;
						end
					end
				elseif (v102 <= 66) then
					local v409 = 0;
					local v410;
					local v411;
					local v412;
					while true do
						if (v409 ~= 2) then
						else
							if (v411 > 0) then
								if (v412 > v99[v410 + 1]) then
								else
									v93 = v101[3];
									v99[v410 + 3] = v412;
								end
							elseif (v412 < v99[v410 + 1]) then
							else
								local v1294 = 0;
								while true do
									if (v1294 == 0) then
										v93 = v101[10 - 7];
										v99[v410 + 3] = v412;
										break;
									end
								end
							end
							break;
						end
						if (v409 == 1) then
							v412 = v99[v410] + v411;
							v99[v410] = v412;
							v409 = 2;
						end
						if (0 ~= v409) then
						else
							v410 = v101[2];
							v411 = v99[v410 + 2];
							v409 = 1;
						end
					end
				elseif (v102 == 67) then
					v99[v101[2]] = v99[v101[3]] + v99[v101[4]];
				else
					v93 = v101[3];
				end
				v93 = v93 + 1;
			end
		end;
	end
	return v40(v39(), {}, v28)(...);
end
return vv17(), ...);
